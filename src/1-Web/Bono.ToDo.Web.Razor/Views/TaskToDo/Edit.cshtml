@using Bono.ToDo.Infrastructure.Resources
@using Bono.ToDo.Web.Razor.Models
@model TaskViewModel
@{
    ViewBag.Title = Resources.Edit;
    string TaskFatherId = string.Empty;

    if (ViewBag.TaskFatherId !=  null && String.IsNullOrEmpty(ViewBag.TaskFatherId.ToString()))
    {
        TaskFatherId = ViewBag.TaskFatherId.ToString();
    }
}
<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>ToDo</h4>
    <hr />
    @Html.ValidationSummary(true)
        
    @Html.Hidden("TaskFatherId", TaskFatherId)
    @Html.HiddenFor(model => model.Id)
    @Html.HiddenFor(model => model.UserId)


    <div class="form-group">
        @Html.LabelFor(m => m.Title, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.Title, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Title)
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(m => m.Description, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.Description, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Description)
        </div>
    </div>

    <div class="form-group col-md-10">
        @Html.Label(null, Resources.TaskFather, new { @class = "col-md-2 control-label", @style = "margin-left: -16px;" })
        @Html.DropDownList("TaskId", null, @Resources.NoFather, new { @class = "form-select form-control chosen-select" })
        
    </div>

    <div class="form-group col-md-10">
        @Html.Label(null, "Convites", new { @class = "col-md-2 control-label", @style = "margin-left: -16px;" })
        <div style="float: right; margin-bottom: 5px; z-index: 9999;">
            <a href="#" class="btn btn-sm btn-info addToInvite"><i class="fa fa-plus-circle"></i> Add</a>
            <a href="#" class="btn btn-sm btn-danger removeInvite"><i class="fa fa-window-close"></i> Remover</a>
        </div>
        @Html.DropDownList(null, null, "Invites", new { @class = "form-select form-control", multiple = "" })
    </div>

    <div class="form-group col-md-10">
        @Html.Label(null, "Usuarios", new { @class = "col-md-2 control-label", @style = "margin-left: -16px;" })
        @Html.DropDownList("UserList", null, new { @class = "form-select form-control", multiple = "" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.IsDone, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.IsDone, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.IsDone)
            <hr />
        </div>
    </div>

    <div class="form-group col-md-10">
        <h4>Sub tarefas</h4>
        <hr />
        <p style="float: right">
            <a href="@Url.Action("Create", "Task", new { Id = Model.Id, TaskFatherId =  Model.Id })" class="btn btn-success btn-sm">
                <i class="fa fa-plus"></i> @Resources.CreateNew
            </a>
        </p>
        <table class="table">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.Title)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.User.Email)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.User.HomeTown)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.IsDone)
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in (IEnumerable<TaskViewModel>)ViewBag.SubTasks)
                {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Title)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.User.Email)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.User.HomeTown)
                    </td>
                    <td>
                        @if (item.IsDone)
                        {
                            <div style="color: darkseagreen; font-weight: bold">@Resources.Yes</div>
                        }
                        else
                        {
                            <div style="color: indianred; font-weight: bold">@Resources.No</div>
                        }
                    </td>
                    <td style="width: 25%; text-align: center">
                        @if (ViewBag.UserId == item.UserId || User.IsInRole("Admin"))
                        {
                            @Html.Raw(Html.ActionLink(Resources.Edit, "Edit", new { id = item.Id, TaskFatherId = Model.Id }, new { @class = "btn btn-outline-success btn-sm" })) <input id="btnDelete" type="button" value="Delete" TaskId="@item.Id" class="btn btn-outline-danger btn-sm" />
                        }
                        else
                        {

                            @Html.ActionLink(Resources.Edit, "Edit", new { id = item.Id, TaskFatherId = Model.Id })
                        }
                    </td>
                </tr>
                }
            </tbody>
        </table>
    </div>
    <div class="form-group">
        <div class="col-md-10">
            <div style="float: right; font-size: 14px;">
                <a href="#" onclick="javascript:history.back()" class="btn btn-sm btn-info">Voltar</a>
                <input type="submit" value="@Resources.Save" class="btn btn-sm btn-success" />
            </div>
        </div>
    </div>
    <br /><br />
</div>

}

    <div id="modalAddList" class="modal" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Invite</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <form id="InviteForm">
                        <div class="form-horizontal">
                            <div class="row mt-3">
                                <div class="validation-summary-errors col-md-12">
                                    <ul>
                                        <li id="InvalidEmail" style="display: none">@Resources.InvalidEmail</li>
                                        <li id="RequiredField" style="display: none">@Resources.RequiredField</li>
                                    </ul>
                                </div>
                                <label class="col-md-5 control-label">@Resources.Email</label>
                                <div class="col-md-12">
                                    <input type="email" id="Invite" required class="form-control" />
                                </div>
                            </div>
                        </div>
                    </form>

                </div>
                <div class="modal-footer">
                    <input type="button" value="@Resources.Save" class="btn btn-outline-success btn-sm btn-block btnSaveInvite" />
                </div>
            </div>
        </div>
    </div>

    @section Scripts {
      
    }

<script>

    $(document).ready(function() {
        $('.table').dataTable( {
            @*"language": {
                "url": "@String.Format("/scripts/datatables.extensions/i18n/datatable.{0}.js", Bono.ToDo.Web.CustomRouteConfig.Culture.CultureHelper.GetCurrentNeutralCulture())"
            }*@
        });
    });

    $("#btnDelete").click(function () {

        var Id = $(this).attr("TaskId");
        ShowAlertDelete("@Resources.DeleteMessage", "Task", Id, '@Model.Id');

    });

    $(".addToInvite").click(function () {

        $("#modalAddList").modal();

    });

    $(".removeInvite").click(function ()
    {
        var invite = $('select[name=Invites]').val()[0];

        $("#Invites").find('[value="' + invite + '"]').remove();

    });    

    $(".btnSaveInvite").click(function () {

        $("#RequiredField").hide();
        $("#InvalidEmail").hide();

        var valid = true;
        var invite = $("#Invite").val();

        if (invite == "") {
            $("#RequiredField").show();
            valid = false;
        }

        if (!isEmail(invite))
        {
            $("#InvalidEmail").show();
            valid = false;
        }

        if (valid) {
            $('#Invites').append($('<option/>', {
                value: invite,
                text: invite,
                selected: "selected"
            }));
        }

        $("#Invite").val("");
        $("#modalAddList").modal('hide');


    });    

</script>

